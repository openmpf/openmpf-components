{
  "componentName" : "TikaTextDetection",
  "componentVersion" : "6.2",
  "middlewareVersion" : "6.2",
  "sourceLanguage" : "java",
  "batchLibrary" : "mpf-tika-text-detection-component-6.2.jar",
  "environmentVariables" : [],
  "algorithm" : {
    "name": "TIKATEXT",
    "description": "The Apache Tika text detection component.",
    "actionType": "DETECTION",
    "requiresCollection": {
      "states": []
    },
    "providesCollection": {
      "states": [
        "DETECTION",
        "DETECTION_TEXT",
        "DETECTION_TEXT_TIKA"
      ],
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "description": "The minimum confidence score which must be met or exceeded. Detections below this threshold are silently discarded.",
          "type": "DOUBLE",
          "defaultValue": "-2"
        },
        {
          "name": "STORE_METADATA",
          "description": "Specifies whether or not to store metadata as a separate track detection.",
          "type": "BOOLEAN",
          "defaultValue": "false"
        },
        {
          "name": "LIST_ALL_PAGES",
          "description": "Specifies whether or not to store each page as a track, even if no text is extracted.",
          "type": "BOOLEAN",
          "defaultValue": "false"
        },
        {
          "name": "MIN_CHARS_FOR_LANGUAGE_DETECTION",
          "description": "Specifies minimum length of detected text before language filtering is applied.",
          "type": "INT",
          "defaultValue": "20"
        },
        {
          "name": "PASS_FEED_FORWARD_DERIVATIVE_MEDIA_TRACKS",
          "description": "When set to true, any feed-forward track with an existing DERIVATIVE_MEDIA property is returned without modification. Only applies to image jobs. Normally, images are not supported and would result in an error.",
          "type": "BOOLEAN",
          "defaultValue": "false"
        }

      ]
    }
  },
  "actions": [
    {
      "name": "TIKA TEXT DETECTION ACTION",
      "description": "Executes the Tika text detection algorithm using the default parameters.",
      "algorithm": "TIKATEXT",
      "properties": []
    },
    {
      "name": "TIKA TEXT DETECTION SKIP DERIVATIVE MEDIA ACTION",
      "description": "Executes the Tika text detection algorithm using the default parameters. Skips DERIVATIVE_MEDIA tracks.",
      "algorithm": "TIKATEXT",
      "properties": [
        {
          "name": "PASS_FEED_FORWARD_DERIVATIVE_MEDIA_TRACKS",
          "value": "true"
        },
        {
          "name": "FEED_FORWARD_TYPE",
          "value": "FRAME"
        }
      ]
    }
  ],
  "tasks": [
    {
      "name": "TIKA TEXT DETECTION TASK",
      "description": "Performs Tika text detection.",
      "actions": [
        "TIKA TEXT DETECTION ACTION"
      ]
    },
    {
      "name": "TIKA TEXT DETECTION SKIP DERIVATIVE MEDIA TASK",
      "description": "Performs Tika text detection. Skips DERIVATIVE_MEDIA tracks.",
      "actions": [
        "TIKA TEXT DETECTION SKIP DERIVATIVE MEDIA ACTION"
      ]
    }
  ],
  "pipelines": [
    {
      "name": "TIKA TEXT DETECTION PIPELINE",
      "description": "Performs Tika text detection.",
      "tasks": [
        "TIKA TEXT DETECTION TASK"
      ]
    },
    {
      "name": "TIKA TEXT DETECTION WITH KEYWORD TAGGING PIPELINE",
      "description": "Performs Tika text detection and keyword tagging.",
      "tasks": [
        "TIKA TEXT DETECTION TASK",
        "KEYWORD TAGGING (WITH FF REGION) TASK"
      ]
    }
  ]
}
