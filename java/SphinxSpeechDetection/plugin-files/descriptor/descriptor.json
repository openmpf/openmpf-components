{
  "componentName": "SphinxSpeechDetection",
  "componentVersion": "3.0.0",
  "middlewareVersion": "3.0.0",
  "sourceLanguage": "java",
  "batchLibrary": "mpf-sphinx-speech-detection-component-3.0.0.jar",
  "environmentVariables": [
    {
      "name": "LD_LIBRARY_PATH",
      "value": "${MPF_HOME}/lib:${LD_LIBRARY_PATH}"
    }
  ],
  "algorithm": {
    "name": "SPHINX",
    "description": "Detects and transcribes English language speech in audio and video files.",
    "actionType": "DETECTION",
    "requiresCollection": {
      "states": []
    },
    "providesCollection": {
      "states": [
        "DETECTION",
        "DETECTION_SPEECH",
        "DETECTION_SPEECH_SPHINX"
      ],
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "description": "The minimum confidence score which must be met or exceeded. Detections below this threshold are silently discarded.",
          "type": "DOUBLE",
          "defaultValue": "-2"
        },
        {
          "name": "MIN_GAP_BETWEEN_SEGMENTS",
          "description": "In the context of videos, the minimum number of frames between segments which are not adjacent. Value must be greater than or equal to 1. Default value is defined by the OpenMPF properties file.",
          "type": "INT",
          "propertiesKey": "detection.segment.minimum.gap"
        },
        {
          "name": "TARGET_SEGMENT_LENGTH",
          "description": "In the context of videos, the preferred length of segments which are to be processed by this algorithm. Value is expected to be greater than 10. Default value is defined by the OpenMPF properties file.",
          "type": "INT",
          "propertiesKey": "detection.segment.target.length"
        },
        {
          "name": "MIN_SEGMENT_LENGTH",
          "description": "In the context of videos, the minimum length of a segment which will be processed by this algorithm. Value must be greater than 0. Default value is defined by the OpenMPF properties file.",
          "type": "INT",
          "propertiesKey": "detection.segment.minimum.length"
        }
      ]
    }
  },
  "actions": [
    {
      "name": "SPHINX SPEECH DETECTION ACTION",
      "description": "Executes the Sphinx speech detection algorithm using the default parameters.",
      "algorithm": "SPHINX",
      "properties": []
    }
  ],
  "tasks": [
    {
      "name": "SPHINX SPEECH DETECTION TASK",
      "description": "Performs Sphinx speech detection.",
      "actions": [
        "SPHINX SPEECH DETECTION ACTION"
      ]
    }
  ],
  "pipelines": [
    {
      "name": "SPHINX SPEECH DETECTION PIPELINE",
      "description": "Performs Sphinx speech detection.",
      "tasks": [
        "SPHINX SPEECH DETECTION TASK"
      ]
    },
    {
      "name": "SPHINX SPEECH DETECTION (WITH MARKUP) PIPELINE",
      "description": "Performs Sphinx speech detection and marks up the results.",
      "tasks": [
        "SPHINX SPEECH DETECTION TASK",
        "OCV GENERIC MARKUP TASK"
      ]
    }
  ]
}
