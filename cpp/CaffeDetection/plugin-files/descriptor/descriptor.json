{
  "componentName" : "CaffeDetection",
  "componentVersion" : "0.9.1",
  "middlewareVersion" :  "0.9.0",
  "sourceLanguage" : "c++",
  "pathName" : "amq_detection_component",
  "launchArgs" : ["${MPF_HOME}/plugins/CaffeDetection/lib/libcaffe.so"],
  "environmentVariables" : [ {
    "name" : "LD_LIBRARY_PATH",
    "value" : "${MPF_HOME}/plugins/CaffeDetection/lib:${LD_LIBRARY_PATH}"
  } ],
  "algorithm" : {
    "name" : "Caffe",
    "description" : "Returns a semantic description and a confidence score when provided with an input image.",
    "actionType" : "DETECTION",
    "requiresCollection" : {
      "states" : []
    },
    "providesCollection" : {
      "states" : [],
      "properties" : [
       {
         "name" : "MODEL_NAME",
         "description" : "The model to be used with Caffe. 'googlenet' is provided by default. Other models can be provided separately.",
         "type" : "STRING",
         "defaultValue" : "googlenet"
       },
       {
         "name" : "MODEL_OUTPUT_LAYER",
         "description" : "The name of the layer within the specified model for which output should be reported. The model layer names are defined in the .prototxt file associated with the model.",
         "type" : "STRING",
	 "defaultValue" : "prob"
       },
       {
         "name" : "NUMBER_OF_CLASSIFICATIONS",
         "description" : "The number of classifications, N, to be returned. The N highest confidence classifications found by the network will be returned with their associated confidence values. The value must be greater than 0, and less than the size of the model output layer.",
         "type" : "INT",
	 "defaultValue" : "1"
       },
       {
         "name" : "CONFIDENCE_THRESHOLD",
         "description" : "The confidence threshold for returning a classification result. No classifications lower than this threshold will be returned, even if that means returning fewer classifications than the number of classifications requested. The value must be greater than or equal to 0.0.",
         "type" : "DOUBLE",
	 "defaultValue" : "0.0"
       },
        {
          "name": "MERGE_TRACKS",
          "description": "In the context of videos, when set to true, attempt to merge tracks spanning segment boundaries.",
          "type": "BOOLEAN",
          "propertiesKey": "detection.track.merging.enabled"
        },
        {
          "name": "MIN_GAP_BETWEEN_TRACKS",
          "description": "In the context of videos, similar tracks with less than this number of frames between them will be merged into a single track. If MERGE_TRACKS is false, this has no effect.",
          "type": "INT",
          "propertiesKey": "detection.track.min.gap"
        },
        {
          "name": "MIN_TRACK_LENGTH",
          "description": "In the context of videos, defines the minimum track length in frames. Tracks shorter than this minimum length will be silently discarded.",
          "type": "INT",
          "propertiesKey": "detection.track.minimum.length"
        },
       {
         "name" : "FRAME_HEIGHT",
         "description" : "The height, in pixels, of the images on which the selected Caffe model has been trained. The default value (224) is for the default model (googlenet).",
         "type" : "INT",
	 "defaultValue" : "224"
       },
       {
         "name" : "FRAME_WIDTH",
         "description" : "The width, in pixels, of the images on which the selected Caffe model has been trained. The default value (224) is for the default model (googlenet).",
         "type" : "INT",
	 "defaultValue" : "224"
       },
       {
         "name": "SEARCH_REGION_ENABLE_DETECTION",
         "description": "Enable cropping.",
         "type": "BOOLEAN",
         "defaultValue": "false"
       },
       {
         "name": "SEARCH_REGION_TOP_LEFT_X_DETECTION",
         "description": "X coordinate for top left corner of cropped frame. If negative, 0 will be used.",
         "type": "INT",
         "defaultValue": "-1"
       },
       {
         "name": "SEARCH_REGION_TOP_LEFT_Y_DETECTION",
         "description": "Y coordinate for top left corner of cropped frame. If negative, 0 will be used.",
         "type": "INT",
         "defaultValue": "-1"
       },
       {
         "name": "SEARCH_REGION_BOTTOM_RIGHT_X_DETECTION",
         "description": "X coordinate for bottom right corner of cropped frame. If negative, bottom right X of input media will be used.",
         "type": "INT",
         "defaultValue": "-1"
       },
       {
         "name": "SEARCH_REGION_BOTTOM_RIGHT_Y_DETECTION",
         "description": "Y coordinate for bottom right corner of cropped frame. If negative, bottom right Y of input media. will be used.",
         "type": "INT",
         "defaultValue": "-1"
       },
       {
         "name": "ROTATION",
         "description": "Specifies the number of degrees in the clockwise direction that the media will be rotated. Only 90, 180 and 270 degrees are supported.",
         "type": "INT",
         "defaultValue": "0"
       },
       {
         "name": "HORIZONTAL_FLIP",
         "description": "Specifies whether or not the original media is flipped. Rotation occurs before flipping.",
         "type": "BOOLEAN",
         "defaultValue": "false"
       },
       {
         "name": "AUTO_ROTATE",
         "description": "Specifies whether not to rotate media based on EXIF data or video metadata.",
         "type": "BOOLEAN",
         "defaultValue": "false"
       },
       {
         "name": "AUTO_FLIP",
         "description": "Specifies whether or not to flip media based on EXIF data.",
         "type": "BOOLEAN",
         "defaultValue": "false"
       }
      ]
    }
  }
}

