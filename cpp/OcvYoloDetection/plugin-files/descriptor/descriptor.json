{
  "componentName": "OcvYoloDetection",
  "componentVersion": "1.0",
  "middlewareVersion": "5.1.0",
  "sourceLanguage": "c++",
  "batchLibrary": "${MPF_HOME}/plugins/OcvYoloDetection/lib/libmpfOcvYoloDetection.so",
  "environmentVariables": [
    {
      "name": "LD_LIBRARY_PATH",
      "value": "${MPF_HOME}/plugins/OcvYoloDetection/lib:${LD_LIBRARY_PATH}"
    }
  ],
  "algorithm": {
    "name": "OCVYOLO",
    "description": "Detects objects in images and videos using the Open Computer Vision (OCV) library using Yolo.",
    "actionType": "DETECTION",
    "requiresCollection": {
      "states": []
    },
    "providesCollection": {
      "states": [
        "DETECTION",
        "DETECTION_CLASS",
        "DETECTION_CLASS_OCVYOLO"
      ],
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "description": "Minimum detection confidence value [0...1] needed to keep detection and start a track.",
          "type": "FLOAT",
          "defaultValue": "0.5"
        },
        {
          "name": "MODEL_NAME",
          "description": "Name of YOLO model to run.",
          "type": "STRING",
          "defaultValue": "tiny yolo"
        },
        {
          "name": "MODELS_DIR_PATH",
          "description": "Path to models directory",
          "type": "STRING",
          "propertiesKey": "detection.models.dir.path"
        },
        {
          "name": "NET_INPUT_IMAGE_SIZE",
          "description": "Scaled image width and height for detection network input (e.g. 320, 416, or 608).",
          "type": "INT",
          "defaultValue": "416"
        },
        {
          "name": "DETECTION_NMS_THRESHOLD",
          "description": "Non maximum suppression threshold [0...1], IoU for duplicate object detection suppression.",
          "type": "FLOAT",
          "defaultValue": "0.3"
        },
        {
          "name": "DETECTION_FRAME_BATCH_SIZE",
          "description": "Number of frames to batch inference when processing video. GPU VRAM dependant",
          "type": "INT",
          "defaultValue": "16"
        },
        {
          "name": "FRAME_QUEUE_CAPACITY",
          "description": "The maximum number of frames in the frame queue used by MPFAsyncVideoCapture.",
          "type": "INT",
          "defaultValue": "16"
        },
        {
          "name": "NUMBER_OF_CLASSIFICATIONS_PER_REGION",
          "description": "Number of classification to return per detection",
          "type": "INT",
          "defaultValue": "5"
        },
        {
          "name": "CLASS_WHITELIST_FILE",
          "description": "When provided, only class names contained in the specified file will be reported.",
          "type": "STRING",
          "defaultValue": ""
        },
        {
          "name": "TRACKING_MAX_FRAME_GAP",
          "description": "Maximum temporal distance (# of frames) between detection in a track.",
          "type": "INT",
          "defaultValue": "4"
        },
        {
          "name": "TRACKING_MAX_CLASS_DIST",
          "description": "Threshold class-similarity-distance [0...1] above which detections will not be considered for a track of a particular class.",
          "type": "FLOAT",
          "defaultValue": "0.99"
        },
        {
          "name": "TRACKING_MAX_IOU_DIST",
          "description": "Maximum intersection over union distance (1.0 - iou) =[0..1] between detections below which detection will be considered part of same track",
          "type": "FLOAT",
          "defaultValue": "0.3"
        },
        {
          "name": "TRACKING_MAX_FEATURE_DIST",
          "description": "Maximum distance in nomalized aggregate pixel-difference [0..1] between detections below which detection will be considered part of same track",
          "type": "FLOAT",
          "defaultValue": "0.1"
        },
        {
          "name": "TRACKING_EDGE_SNAP_DIST",
          "description": "Frame border as fraction of frame dimension within which detection bounding boxes are snapped to edge.",
          "type": "FLOAT",
          "defaultValue": "0.0075"
        },
        {
          "name": "TRACKING_DFT_SIZE",
          "description": "DFT size for bbox alignment via phase correlation.",
          "type": "INT",
          "defaultValue": "256"
        },
        {
          "name": "TRACKING_DISABLE_MOSSE_TRACKER",
          "description": "Disable builtin backup OCV MOSSE tracking.",
          "type": "BOOLEAN",
          "defaultValue": "false"
        },
        {
          "name": "TRACKING_DFT_USE_HANNING_WINDOW",
          "description": "Use hanning windowing with DFT (better registration, but slower).",
          "type": "BOOLEAN",
          "defaultValue": "true"
        },
        {
          "name": "KF_MAX_ASSIGNMENT_RESIDUAL",
          "description": "Maximim number of standard deviations of a kalman filter state residual that a potential detection assignment is allowed to cause.",
          "type": "FLOAT",
          "defaultValue": "2.5"
        },
        {
          "name": "KF_DISABLED",
          "description": "Disables the use of motion prediction via Kalman filtering during tracking.",
          "type": "BOOLEAN",
          "defaultValue": "false"
        },
        {
          "name": "KF_RN",
          "description": "Bounding box detector noise standard deviations (in pixels) [center_x_noise_stdev, center_y_noise_stddev, width_noise_stdev, height_noise_stddev] for Kalman filter R",
          "type": "STRING",
          "defaultValue": " [ 10.0, 10.0, 100.0, 100.0 ] "
        },
        {
          "name": "KF_QN",
          "description": "Bounding box motion model acceleration inaccuracies/noise (in pixels/sec^2) [center_x_acceleration_noise_stdev, center_y_acceleration_noise_stdev, width_acceleration_noise_stdev, height_acceleration_noise_stdev ] for Kalman filter Q",
          "type": "STRING",
          "defaultValue": " [ 1000.0, 1000.0, 1000.0, 1000.0 ] "
        },
        {
          "name": "CUDA_DEVICE_ID",
          "description": "CUDA device / GPU to use, -1 to only use CPU",
          "type": "INT",
          "propertiesKey": "detection.cuda.device.id"
        },
        {
          "name": "FALLBACK_TO_CPU_WHEN_GPU_PROBLEM",
          "description": "if true will fallback to CPU only when GPU fails to initialize",
          "type": "BOOLEAN",
          "propertiesKey": "detection.use.cpu.when.gpu.problem"
        }

      ]
    }
  },
  "actions": [
    {
      "name": "OCV TINY YOLO OBJECT DETECTION ACTION",
      "description": "Runs the Tiny YOLO object detection Darknet model.",
      "algorithm": "OCVYOLO",
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "value": "0.5"
        },
        {
          "name": "MODEL_NAME",
          "value": "TINY YOLO"
        },
        {
          "name": "NET_INPUT_IMAGE_SIZE",
          "value": "416"
        }
      ]
    },
    {
      "name": "OCV TINY YOLO VEHICLE DETECTION ACTION",
      "description": "Runs the Tiny YOLO object detection Darknet model, and only detects road vehicles (cars, buses, trucks).",
      "algorithm": "OCVYOLO",
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "value": "0.5"
        },
        {
          "name": "MODEL_NAME",
          "value": "TINY YOLO"
        },
        {
          "name": "NET_INPUT_IMAGE_SIZE",
          "value": "416"
        },
        {
          "name": "CLASS_WHITELIST_FILE",
          "value": "$MPF_HOME/plugins/OcvYoloDetection/models/vehicle-whitelist.txt"
        }
      ]
    },
    {
      "name": "OCV YOLO OBJECT DETECTION ACTION",
      "description": "Runs the YOLO object detection Darknet model.",
      "algorithm": "OCVYOLO",
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "value": "0.5"
        },
        {
          "name": "MODEL_NAME",
          "value": "YOLO"
        },
        {
          "name": "NET_INPUT_IMAGE_SIZE",
          "value": "608"
        }
      ]
    },
    {
      "name": "OCV YOLO V3 OBJECT DETECTION ACTION",
      "description": "Runs the YOLO V3 object detection Darknet model.",
      "algorithm": "OCVYOLO",
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "value": "0.5"
        },
        {
          "name": "MODEL_NAME",
          "value": "YOLO V3"
        },
        {
          "name": "NET_INPUT_IMAGE_SIZE",
          "value": "608"
        }
      ]
    },
    {
      "name": "OCV TINY YOLO V3 OBJECT DETECTION ACTION",
      "description": "Runs the TINY YOLO V3 object detection Darknet model.",
      "algorithm": "OCVYOLO",
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "value": "0.5"
        },
        {
          "name": "MODEL_NAME",
          "value": "TINY YOLO V3"
        },
        {
          "name": "NET_INPUT_IMAGE_SIZE",
          "value": "416"
        }
      ]
    },
    {
      "name": "OCV YOLO VEHICLE DETECTION ACTION",
      "description": "Runs the YOLO object detection Darknet model, and only detects road vehicles (cars, buses, trucks).",
      "algorithm": "OCVYOLO",
      "properties": [
        {
          "name": "CONFIDENCE_THRESHOLD",
          "value": "0.5"
        },
        {
          "name": "MODEL_NAME",
          "value": "YOLO"
        },
        {
          "name": "NET_INPUT_IMAGE_SIZE",
          "value": "608"
        },
        {
          "name": "CLASS_WHITELIST_FILE",
          "value": "$MPF_HOME/plugins/OcvYoloDetection/models/vehicle-whitelist.txt"
        }
      ]
    }
  ],
  "tasks": [
    {
      "name": "OCV TINY YOLO OBJECT DETECTION TASK",
      "description": "Runs the Tiny YOLO object detection Darknet model.",
      "actions": [
        "OCV TINY YOLO OBJECT DETECTION ACTION"
      ]
    },
    {
      "name": "OCV TINY YOLO VEHICLE DETECTION TASK",
      "description": "Runs the Tiny YOLO object detection Darknet model, and only detects road vehicles (cars, buses, trucks).",
      "actions": [
        "OCV TINY YOLO VEHICLE DETECTION ACTION"
      ]
    },
    {
      "name": "OCV YOLO OBJECT DETECTION TASK",
      "description": "Runs the YOLO object detection Darknet model.",
      "actions": [
        "OCV YOLO OBJECT DETECTION ACTION"
      ]
    },
    {
      "name": "OCV YOLO V3 OBJECT DETECTION TASK",
      "description": "Runs the YOLO V3 object detection Darknet model.",
      "actions": [
        "OCV YOLO V3 OBJECT DETECTION ACTION"
      ]
    },
    {
      "name": "OCV TINY YOLO V3 OBJECT DETECTION TASK",
      "description": "Runs the TINY YOLO V3 object detection Darknet model.",
      "actions": [
        "OCV TINY YOLO V3 OBJECT DETECTION ACTION"
      ]
    },
    {
      "name": "OCV YOLO VEHICLE DETECTION TASK",
      "description": "Runs the YOLO object detection Darknet model, and only detects road vehicles (cars, buses, trucks).",
      "actions": [
        "OCV YOLO VEHICLE DETECTION ACTION"
      ]
    }
  ],
  "pipelines": [
    {
      "name": "OCV TINY YOLO OBJECT DETECTION PIPELINE",
      "description": "Runs the Tiny YOLO object detection Darknet model.",
      "tasks": [
        "OCV TINY YOLO OBJECT DETECTION TASK"
      ]
    },
    {
      "name": "OCV TINY YOLO OBJECT DETECTION (WITH MARKUP) PIPELINE",
      "description": "Runs the Tiny YOLO object detection Darknet model and produces markup.",
      "tasks": [
        "OCV TINY YOLO OBJECT DETECTION TASK",
        "OCV GENERIC MARKUP TASK"
      ]
    },
    {
      "name": "OCV YOLO OBJECT DETECTION PIPELINE",
      "description": "Runs the YOLO object detection Darknet model.",
      "tasks": [
        "OCV YOLO OBJECT DETECTION TASK"
      ]
    },
    {
      "name": "OCV YOLO OBJECT DETECTION (WITH MARKUP) PIPELINE",
      "description": "Runs the YOLO object detection Darknet model and produces markup.",
      "tasks": [
        "OCV YOLO OBJECT DETECTION TASK",
        "OCV GENERIC MARKUP TASK"
      ]
    },
    {
      "name": "OCV YOLO V3 OBJECT DETECTION PIPELINE",
      "description": "Runs the YOLO V3 object detection Darknet model.",
      "tasks": [
        "OCV YOLO V3 OBJECT DETECTION TASK"
      ]
    },
    {
      "name": "OCV YOLO V3 OBJECT DETECTION (WITH MARKUP) PIPELINE",
      "description": "Runs the YOLO object detection Darknet model and produces markup.",
      "tasks": [
        "OCV YOLO V3 OBJECT DETECTION TASK",
        "OCV GENERIC MARKUP TASK"
      ]
    },
    {
      "name": "OCV TINY YOLO V3 OBJECT DETECTION PIPELINE",
      "description": "Runs the TINY YOLO V3 object detection Darknet model.",
      "tasks": [
        "OCV TINY YOLO V3 OBJECT DETECTION TASK"
      ]
    },
    {
      "name": "OCV TINY YOLO V3 OBJECT DETECTION (WITH MARKUP) PIPELINE",
      "description": "Runs the TINY YOLO object detection Darknet model and produces markup.",
      "tasks": [
        "OCV TINY YOLO V3 OBJECT DETECTION TASK",
        "OCV GENERIC MARKUP TASK"
      ]
    }
  ]
}
