# The "ocvdnn_network_config" and "ocvdnn_weights" fields below determine how to run the model on the local host
# with OpenCV's Deep Neural Net (DNN) framework when the Triton server is not used. They're ignored when Triton is used.

# The "names" and "confusion_matrix" fields below determine how to interpret and handle the inference results.
# They're used with both OpenCV DNN and Triton.

# Instead of a "network_config" and "weights" files, Triton uses engine files. They are not represented here. Each
# engine file should be placed at "/models/<MODEL_NAME>-<NET_INPUT_IMAGE_SIZE>/1/yolov4.engine" on the Triton server.
# For example, if "ENABLE_TRITON=TRUE", "MODEL_NAME=yolo", and "NET_INPUT_IMAGE_SIZE=608", then Triton will attempt to
# load "/models/yolo-608/1/yolov4.engine".


[tiny yolo]
ocvdnn_network_config=yolov4-tiny.cfg

# yolov4-tiny.weights is included in the component source code.
# Original source was https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v4_pre/yolov4-tiny.weights
ocvdnn_weights=yolov4-tiny.weights

names=coco.names


[yolo]
ocvdnn_network_config=yolov4.cfg

# yolov4.weights is not included in the component source code. It is included in the Docker image.
# It can be downloaded from https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights
ocvdnn_weights=yolov4.weights

names=coco.names


[tiny yolo v3]
ocvdnn_network_config=yolov3-tiny.cfg

# yolov3-tiny.weights is included in the component source code.
# Original source was https://pjreddie.com/media/files/yolov3-tiny.weights
ocvdnn_weights=yolov3-tiny.weights

names=coco.names
confusion_matrix=yolov3-confusion-matrix.json


[yolo v3]
ocvdnn_network_config=yolov3.cfg

# yolov3.weights is not included in the component source code. It is included in the Docker image.
# It can be downloaded from https://pjreddie.com/media/files/yolov3.weights
ocvdnn_weights=yolov3.weights

names=coco.names
confusion_matrix=yolov3-confusion-matrix.json
